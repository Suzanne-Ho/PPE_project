import Head from 'next/head'
import Layout from '../components/Layout.js'
import {useState} from 'react'
import {useSupabaseClient} from '@supabase/auth-helpers-react'
import {withPageAuth} from '@supabase/auth-helpers-nextjs'
import UserContext from '../components/UserContext'
import {useContext} from 'react'
import {useRouter} from 'next/router'


export default function useNewPost() {

    const {user} = useContext(UserContext)
    const state = {button: 1}
    const supabase = useSupabaseClient()
    const [message, setMessage] = useState(null)
    const router = useRouter()

    /* Add a post */
    const onSubmit = async function (e) {
        e.preventDefault()
        const data = new FormData(e.target)

        /* checking if user filled the title, subject and the content of his new post */
        if (data.get('title') && data.get('message') && data.get('subject') && data.get('promotion')) {

            const {data: database, error} = await supabase
                .from('posts')
                .select('title')
                .eq('title', data.get('title'))
                .limit(1)

            /* cheching if the title is not already used for another post */
            if (database.length > 0) {
                setMessage(
                    <div>
                        <h2 className="text-center mt-3">Error</h2>
                        <p>Sorry, this title is already used.</p>
                    </div>
                )
            } else {

                var datetime = new Date();
                data.set('slug', data.get('title').replace(/\s+/g, '-').toLowerCase())
                data.set('author', user.email)
                data.set('created_at', datetime.toISOString().split('T')[0])


                const {error} = await supabase
                    .from('posts')
                    .insert(Object.fromEntries(data), {returning: 'minimal'})
                if (error) {
                    setMessage('Sorry, an unexpected error occured.')
                } else {
                    setMessage(
                        <div>
                            <h2 className="text-center mt-3">Confirmation</h2>
                            <p>Your post has been successfully posted. Now everyone can see it.</p>
                        </div>
                    )
                    e.target.reset()
                    router.push('/posts')
                }
            }
        } else {
            setMessage(
                <div>
                    <h2 className="text-center mt-3">Error</h2>
                    <p>You have to fill all the fields</p>
                </div>
            )

        }
        {/* Cancel */
        }
        if (state.button == 0) {
            setMessage(
                <div>
                    <h2 className="text-center mt-3">Canceled</h2>
                    <p>Maybe next time</p>
                </div>
            )
            e.target.reset()
            location.href = '/posts'
        }
    }
    return (
        <Layout>
            <Head>
                <title>Edubet - New post</title>
                <meta name="description" content="Generated by create next app"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <h1 className="flex justify-center mb-4 text-4xl font-extrabold tracking-tight leading-none md:text-5xl lg:text-6xl text-neutralTitle pb-8">
                New post
            </h1>
            {/* form to add a post */}
            <form onSubmit={onSubmit}>
                <div className="grid gap-4 sm:grid-cols-2 sm:gap-6">
                    <div className="sm:col-span-2">
                        <label
                            className="block mb-2 text-sm font-medium text-neutralText">
                            Titre
                        </label>
                        <input placeholder="Titre" type="text" name="title"
                               className="placeholder-onNeutralBg bg-neutralBg border border-onNeutralBg text-onNeutralBg text-sm rounded-lg focus:ring-primaryBg focus:border-primaryBg block w-full p-2.5"
                        />
                    </div>
                    <div className="sm:col-span-2">
                        <label
                            className="block mb-2 text-sm font-medium text-neutralText">
                            Matière
                        </label>
                        <input placeholder="Matière" type="text" name="subject"
                               className="placeholder-onNeutralBg bg-neutralBg border border-onNeutralBg text-onNeutralBg text-sm rounded-lg focus:ring-primaryBg focus:border-primaryBg block w-full p-2.5"
                        />
                    </div>
                    <div className="sm:col-span-2">
                        <label
                            className="block mb-2 text-sm font-medium text-neutralText">
                            Promotion
                        </label>
                        <input placeholder="Promotion" type="text" name="promotion"
                               className="placeholder-onNeutralBg bg-neutralBg border border-onNeutralBg text-onNeutralBg text-sm rounded-lg focus:ring-primaryBg focus:border-primaryBg block w-full p-2.5"
                        />
                    </div>
                    <div className="sm:col-span-2">
                        <label
                            className="block mb-2 text-sm font-medium text-neutralText">
                            Contenu
                        </label>
                        <textarea id="description" rows="15" placeholder="Contenu" type="text" name="message"
                                  className="placeholder-onNeutralBg block p-2.5 w-full bg-neutralBg border border-onNeutralBg text-onNeutralBg text-sm rounded-lg focus:ring-primaryBg focus:border-primaryBg block w-full p-2.5"
                        ></textarea>
                    </div>
                </div>
                <div className="flex mt-5 space-x-5">
                    <button
                        className="p-6 rounded px-3 py-2 text-neutralText bg-primaryBg hover:bg-onPrimaryBg hover:text-hoverText"
                        onClick={() => (state.button = 1)}>
                        Send
                    </button>
                    <button
                        className="p-6 rounded px-3 py-2 text-neutralText bg-primaryBg hover:bg-onPrimaryBg hover:text-hoverText"
                        onClick={() => (state.button = 0)}>
                        Cancel
                    </button>
                </div>
            </form>
            {message &&
                <div aria-label="Overlow below the drawer dialog"
                     className="fixed inset-0 bg-black/80 flex items-center justify-center"
                     onClick={() => setMessage(null)} role="dialog">
                    <div aria-label="Alert pane" className="max-h-[90vh] max-w-[95vw] overflow-auto p-4 prose bg-white">
                        {message}
                    </div>
                </div>
            }
        </Layout>

    )
}

export const getServerSideProps = withPageAuth({redirectTo: "/login"})
